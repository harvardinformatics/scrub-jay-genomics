import yaml

#configfile: "../config/config.yaml"
#Change these variables:
input_dir = "/n/holylfs05/LABS/informatics/Everyone/scrubjay/RAW_DATA/"
samples = ["sample1", "sample2"]
haplotypes=["hap1.p_ctg", "hap2.p_ctg", "p_ctg']

#SAMPLES = [“sample1”, “sample2’]
#expand({sample}_quast.done, sample=SAMPLES)

rule all:
    input:
        expand("results/assembly_qc/{sample}_{haplo}_quast/report.txt", haplo=haplotypes, sample=samples)

reads = glob.glob(f"{input_dir}/{sample}/*/*.fastq.gz")
hifiasm_path = "/n/holylfs05/LABS/informatics/Everyone/scrubjay/hifiasm"
hifi_outdir = "results/hifiasm_output_RAW/"
assem_outdir = "results/assemblies"

rule adapterfilt:
    input:
        "{reads}"
    output:
        temp("{hifi_outdir}/{sample}.filt.fastq.gz")
    conda:
        "envs/adapter.yaml"
    params:
        outprefix="{hifi_outdir}"
    shell:
        "bash scripts/hifiadapterfilt.sh -p {sample} -o {params.outprefix}" #need change sample

rule hifi:
    input:
        "{hifi_outdir}/{sample}.filt.fastq.gz"
    output:
        "{hifi_outdir}/{sample}.{haplo}.gfa"
    threads: 16
    shell:
        "{hifiasm_path}/hifiasm -t {threads} -o {hifi_outdir}/{sample} {input}"

rule gfa_to_fasta:
    input:
        "{hifi_outdir}/{sample}.{haplo}.gfa"
    output:
        temp("{assem_outdir}/{sample}.{haplo}.fa")
    shell:
        "awk '/^S/{print \">\"$2;print $3}' {input} > {output}"

rule rename_contig:
    input:
        "{assem_outdir}/{sample}.{haplo}.fa"
    output:
        "{assem_outdir}/{sample}.{haplo}.rename.fa"
    run:
        fasta=open(input)
        newfasta=open(output,'w')
        for line in fasta:
            if line.startswith('>'):
                ID=line.replace(">", "")
                newID= '>' + sample + '#' + haplo + '#' + ID + '\n'
                newfasta.write(newID)
            else:
                newfasta.write(line)
        fasta.close()
        newfasta.close()

rule quast:
    input:
        "{assem_outdir}/{sample}.{haplo}.rename.fa"
    params: #trying alternative way that's less hack-y
        prefix="results/assembly_qc/{sample}.{haplo}_quast"
    output:
        #quast_dir = directory("results/assembly_qc/{sample}_quast")
        #quast_done = touch("results/assembly_qc/{sample}_quast/{sample}_QUAST.done")
        "results/assembly_qc/{sample}.{haplo}_quast/report.txt"
    conda:
        "envs/quast.yaml"
    threads: 4
    log:
        "logs/{sample}.{haplo}/quast_log/"
    shell:
        "quast.py -t {threads} --eukaryote -o {params.prefix} {input} &> {log}"
